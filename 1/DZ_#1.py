"""
1. Каждое из слов «разработка», «сокет», «декоратор» представить в строковом формате
и проверить тип и содержание соответствующих переменных.
Затем с помощью онлайн-конвертера преобразовать строковые представление в формат Unicode
и также проверить тип и содержимое переменных.
"""
# import chardet
#
# w1 = str("Разработка")
# w2 = str("Сокет")
# w3 = str("декоратор")
# w = [w1, w2, w3]
#
#
#
# for i in range(len(w)):
#     print(f'{w[i]} - \t{type(w[i])}')
#     w[i] = w[i].encode('utf-8')
#     print(f'{w[i]}\n{chardet.detect(w[i])}\n')
#
#
# w1_u = "%u0440%u0430%u0437%u0440%u0430%u0431%u043E%u0442%u043A%u0430%0A"
# w2_u = "%u0421%u043E%u043A%u0435%u0442"
# w3_u = "%u0434%u0435%u043A%u043E%u0440%u0430%u0442%u043E%u0440"
# w_u = [w1_u, w2_u, w3_u]
#
#
# print('\nПосле преобразования \n')
# for i in range(len(w_u)):
#     print(f'{chardet.detect(w_u[i].encode())}')


"""
2. Каждое из слов «class», «function», «method» записать в байтовом типе без преобразования в последовательность кодов 
(не используя методы encode и decode) и определить тип, содержимое и длину соответствующих переменных.
"""

# w1 = '01100011 01101100 01100001 01110011 01110011 '
# w2 = '01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 '
# w3 = '01101101 01100101 01110100 01101000 01101111 01100100 '
#
# w = [w1, w2, w3]
#
# for i in range(len(w)):
#     print(f'{type(w[i])},\t{w[i]},\t \nДлина переменной:{len(w[i])}\n')


"""
3. Определить, какие из слов «attribute», «класс», «функция», «type» невозможно записать в байтовом типе.
"""
# w = ["attribute", "класс", "функция", "type"]
# for i in range(len(w)):
#     print(w[i].encode('utf-8'))
#     convert_w = "b'{0}'".format(w[i])
#     if w[i].encode('utf-8') == convert_w:
#         print('НЕЛЬЗЯ')


"""
4. Преобразовать слова «разработка», «администрирование», «protocol», «standard» 
из строкового представления в байтовое и выполнить обратное преобразование (используя методы encode и decode).
"""

# w = ['разработка', 'администрирование', 'protocol', 'standard']
#
# for i in range(len(w)):
#     w[i] = w[i].encode()
#     print('byte:\t', w[i])
#     w[i] = w[i].decode()
#     print('decode:\t', w[i], '\n')


"""
5. Выполнить пинг веб-ресурсов yandex.ru, youtube.com и 
преобразовать результаты из байтовового в строковый тип на кириллице.
"""

# import subprocess
#
# yand = ['ping', 'yandex.ru']
# tube = ['ping', 'youtube.com']
#
# subproc_ping = subprocess.Popen(yand, stdout=subprocess.PIPE)
#
#
# for line in subproc_ping.stdout:
#     line = line.decode('cp866')
#     print(line)

"""
6. Создать текстовый файл test_file.txt, заполнить его тремя строками: 
«сетевое программирование», «сокет», «декоратор». 
Проверить кодировку файла по умолчанию. 
Принудительно открыть файл в формате Unicode и вывести его содержимое.
"""

